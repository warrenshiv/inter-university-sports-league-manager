service: () -> {
    createLeague: (record {name:text; sportType:variant {Basketball; Volleyball; Football}}) -> (variant {Ok:record {id:text; name:text; createdBy:principal; tournaments:vec record {id:text; teams:vec text; structure:variant {Knockout; RoundRobin}; name:text; sportType:variant {Basketball; Volleyball; Football}}; sportType:variant {Basketball; Volleyball; Football}}; Err:variant {InvalidPayload:text; NotFound:text}});
    createTeam: (record {playerIds:vec principal; name:text; sportType:variant {Basketball; Volleyball; Football}; coachId:text}) -> (variant {Ok:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}; Err:variant {InvalidPayload:text; NotFound:text}});
    createTournament: (record {structure:variant {Knockout; RoundRobin}; name:text; teamIds:vec text; sportType:variant {Basketball; Volleyball; Football}}) -> (variant {Ok:record {id:text; teams:vec text; structure:variant {Knockout; RoundRobin}; name:text; sportType:variant {Basketball; Volleyball; Football}}; Err:variant {InvalidPayload:text; NotFound:text}});
    getLeaderboards: (variant {Basketball; Volleyball; Football}) -> (vec record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}) query;
    getLeagues: () -> (vec record {id:text; name:text; createdBy:principal; tournaments:vec record {id:text; teams:vec text; structure:variant {Knockout; RoundRobin}; name:text; sportType:variant {Basketball; Volleyball; Football}}; sportType:variant {Basketball; Volleyball; Football}}) query;
    getMatches: () -> (vec record {id:text; result:opt text; scheduledDate:text; homeTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}; sportType:variant {Basketball; Volleyball; Football}; awayTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}}) query;
    getTeams: () -> (vec record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}) query;
    getTournaments: () -> (vec record {id:text; teams:vec text; structure:variant {Knockout; RoundRobin}; name:text; sportType:variant {Basketball; Volleyball; Football}}) query;
    getUsers: () -> (vec record {id:text; "principal":principal; name:text; role:variant {Administrator; StudentAthlete; Coach; LeagueOfficial}; email:text}) query;
    registerUser: (record {name:text; role:variant {Administrator; StudentAthlete; Coach; LeagueOfficial}; email:text}) -> (variant {Ok:record {id:text; "principal":principal; name:text; role:variant {Administrator; StudentAthlete; Coach; LeagueOfficial}; email:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    scheduleMatch: (record {scheduledDate:text; awayTeamId:text; homeTeamId:text}) -> (variant {Ok:record {id:text; result:opt text; scheduledDate:text; homeTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}; sportType:variant {Basketball; Volleyball; Football}; awayTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}}; Err:variant {InvalidPayload:text; NotFound:text}});
    submitMatchResult: (record {result:text; matchId:text}) -> (variant {Ok:record {id:text; result:opt text; scheduledDate:text; homeTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}; sportType:variant {Basketball; Volleyball; Football}; awayTeam:record {id:text; name:text; coach:principal; sportType:variant {Basketball; Volleyball; Football}; players:vec principal}}; Err:variant {InvalidPayload:text; NotFound:text}});
    updateUser: (record {id:text; name:text; role:variant {Administrator; StudentAthlete; Coach; LeagueOfficial}; email:text}) -> (variant {Ok:record {id:text; "principal":principal; name:text; role:variant {Administrator; StudentAthlete; Coach; LeagueOfficial}; email:text}; Err:variant {InvalidPayload:text; NotFound:text}});
}
